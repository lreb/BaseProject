// <auto-generated />
using System;
using BaseProjectAPI.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BaseProjectAPI.Persistence.Migrations
{
    [DbContext(typeof(BaseDataContext))]
    [Migration("20210629165310_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("BaseProjectAPI.Domain.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("TIMEZONE('utc', NOW())");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<DateTimeOffset?>("DisabledOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Name", "Quantity", "CreatedOn");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 10, 25, 17, 7, 58, 318, DateTimeKind.Unspecified).AddTicks(9891), new TimeSpan(0, -7, 0, 0, 0)),
                            Description = "Senior",
                            IsEnabled = true,
                            Name = "Doris",
                            Quantity = 9
                        },
                        new
                        {
                            Id = 2L,
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 9, 26, 12, 11, 8, 99, DateTimeKind.Unspecified).AddTicks(8929), new TimeSpan(0, -6, 0, 0, 0)),
                            Description = "Corporate",
                            IsEnabled = false,
                            Name = "Susan",
                            Quantity = 8
                        },
                        new
                        {
                            Id = 3L,
                            CreatedOn = new DateTimeOffset(new DateTime(2016, 11, 23, 18, 22, 38, 824, DateTimeKind.Unspecified).AddTicks(1580), new TimeSpan(0, -7, 0, 0, 0)),
                            Description = "Internal",
                            IsEnabled = false,
                            Name = "Roxanne",
                            Quantity = 3
                        },
                        new
                        {
                            Id = 4L,
                            CreatedOn = new DateTimeOffset(new DateTime(2012, 5, 30, 16, 32, 10, 608, DateTimeKind.Unspecified).AddTicks(6138), new TimeSpan(0, -6, 0, 0, 0)),
                            Description = "Central",
                            IsEnabled = true,
                            Name = "Angel",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 5L,
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 1, 28, 9, 11, 40, 845, DateTimeKind.Unspecified).AddTicks(9077), new TimeSpan(0, -7, 0, 0, 0)),
                            Description = "Internal",
                            IsEnabled = false,
                            Name = "Bertha",
                            Quantity = 1
                        },
                        new
                        {
                            Id = 6L,
                            CreatedOn = new DateTimeOffset(new DateTime(2018, 7, 24, 20, 25, 6, 561, DateTimeKind.Unspecified).AddTicks(7912), new TimeSpan(0, -6, 0, 0, 0)),
                            Description = "Future",
                            IsEnabled = true,
                            Name = "Carolyn",
                            Quantity = 5
                        },
                        new
                        {
                            Id = 7L,
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 2, 28, 3, 47, 8, 897, DateTimeKind.Unspecified).AddTicks(9335), new TimeSpan(0, -7, 0, 0, 0)),
                            Description = "Lead",
                            IsEnabled = false,
                            Name = "Betsy",
                            Quantity = 6
                        },
                        new
                        {
                            Id = 8L,
                            CreatedOn = new DateTimeOffset(new DateTime(2012, 11, 4, 1, 34, 20, 399, DateTimeKind.Unspecified).AddTicks(5342), new TimeSpan(0, -7, 0, 0, 0)),
                            Description = "Human",
                            IsEnabled = true,
                            Name = "Eloise",
                            Quantity = 7
                        },
                        new
                        {
                            Id = 9L,
                            CreatedOn = new DateTimeOffset(new DateTime(2012, 4, 17, 11, 19, 18, 316, DateTimeKind.Unspecified).AddTicks(6451), new TimeSpan(0, -6, 0, 0, 0)),
                            Description = "Investor",
                            IsEnabled = false,
                            Name = "Marie",
                            Quantity = 4
                        },
                        new
                        {
                            Id = 10L,
                            CreatedOn = new DateTimeOffset(new DateTime(2013, 1, 24, 20, 24, 32, 400, DateTimeKind.Unspecified).AddTicks(4971), new TimeSpan(0, -7, 0, 0, 0)),
                            Description = "Regional",
                            IsEnabled = true,
                            Name = "Karen",
                            Quantity = 8
                        });
                });

            modelBuilder.Entity("BaseProjectAPI.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTimeOffset>("CreatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DisabledOn")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("UpdatedOn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedOn = new DateTimeOffset(new DateTime(2021, 1, 26, 3, 42, 1, 7, DateTimeKind.Unspecified).AddTicks(4706), new TimeSpan(0, -7, 0, 0, 0)),
                            Email = "Shannon.Trantow@hotmail.com",
                            FirstName = "Shannon",
                            IsEnabled = true,
                            LastName = "Trantow"
                        },
                        new
                        {
                            Id = 2,
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 5, 1, 18, 48, 58, 709, DateTimeKind.Unspecified).AddTicks(4451), new TimeSpan(0, -6, 0, 0, 0)),
                            Email = "Ramiro_Fahey55@hotmail.com",
                            FirstName = "Ramiro",
                            IsEnabled = false,
                            LastName = "Fahey"
                        },
                        new
                        {
                            Id = 3,
                            CreatedOn = new DateTimeOffset(new DateTime(2013, 12, 3, 1, 0, 36, 354, DateTimeKind.Unspecified).AddTicks(3405), new TimeSpan(0, -7, 0, 0, 0)),
                            Email = "Myron_Hammes96@yahoo.com",
                            FirstName = "Myron",
                            IsEnabled = false,
                            LastName = "Hammes"
                        },
                        new
                        {
                            Id = 4,
                            CreatedOn = new DateTimeOffset(new DateTime(2019, 4, 28, 0, 12, 59, 533, DateTimeKind.Unspecified).AddTicks(1902), new TimeSpan(0, -6, 0, 0, 0)),
                            Email = "Rafael.Schuster@hotmail.com",
                            FirstName = "Rafael",
                            IsEnabled = true,
                            LastName = "Schuster"
                        },
                        new
                        {
                            Id = 5,
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 7, 16, 22, 51, 10, 531, DateTimeKind.Unspecified).AddTicks(2360), new TimeSpan(0, -6, 0, 0, 0)),
                            Email = "Abraham66@gmail.com",
                            FirstName = "Abraham",
                            IsEnabled = false,
                            LastName = "Koelpin"
                        },
                        new
                        {
                            Id = 6,
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 6, 14, 1, 20, 15, 467, DateTimeKind.Unspecified).AddTicks(8023), new TimeSpan(0, -6, 0, 0, 0)),
                            Email = "John_Leannon44@hotmail.com",
                            FirstName = "John",
                            IsEnabled = true,
                            LastName = "Leannon"
                        },
                        new
                        {
                            Id = 7,
                            CreatedOn = new DateTimeOffset(new DateTime(2020, 3, 21, 3, 7, 51, 768, DateTimeKind.Unspecified).AddTicks(620), new TimeSpan(0, -7, 0, 0, 0)),
                            Email = "Tommy.Bartoletti70@yahoo.com",
                            FirstName = "Tommy",
                            IsEnabled = false,
                            LastName = "Bartoletti"
                        },
                        new
                        {
                            Id = 8,
                            CreatedOn = new DateTimeOffset(new DateTime(2017, 11, 14, 9, 54, 7, 437, DateTimeKind.Unspecified).AddTicks(6752), new TimeSpan(0, -7, 0, 0, 0)),
                            Email = "Ernesto49@hotmail.com",
                            FirstName = "Ernesto",
                            IsEnabled = false,
                            LastName = "Tillman"
                        },
                        new
                        {
                            Id = 9,
                            CreatedOn = new DateTimeOffset(new DateTime(2015, 6, 1, 22, 48, 54, 61, DateTimeKind.Unspecified).AddTicks(5624), new TimeSpan(0, -6, 0, 0, 0)),
                            Email = "Leland29@hotmail.com",
                            FirstName = "Leland",
                            IsEnabled = true,
                            LastName = "Weissnat"
                        },
                        new
                        {
                            Id = 10,
                            CreatedOn = new DateTimeOffset(new DateTime(2014, 2, 21, 16, 52, 6, 113, DateTimeKind.Unspecified).AddTicks(3044), new TimeSpan(0, -7, 0, 0, 0)),
                            Email = "Bradley.Balistreri14@gmail.com",
                            FirstName = "Bradley",
                            IsEnabled = false,
                            LastName = "Balistreri"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
